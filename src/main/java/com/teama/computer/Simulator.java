/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/*Naming the package of the project
*/
package com.teama.computer;

/*Importing the main elements that we will be using in this code
*/
import com.sun.tools.javac.Main;
//Importing the color class that will be used for the buttons and other elements in the code 
import java.awt.Color;
//Importing the file class as well/
import java.io.File;
//We will be using a hashmap to store the values in the code
import java.util.HashMap;
//Importing this to handle errors
import java.io.FileNotFoundException;
import java.io.InputStream;
import javax.swing.JOptionPane;
import java.util.Scanner;

/**
 *
 * @author Awesome Team 1;
 */
public class Simulator extends javax.swing.JFrame {

 
    public Simulator() {
        // this is where we initate the components of the simulator
        initComponents();
        
             
    }
    
    //Here we set up the hashmap that will be used to store the values when we click on store and then to fetch the values when we click on load. 
   HashMap<String, String> memorya= new HashMap<String, String>(); 
  
   HashMap<String, String> instruct = new HashMap<String, String>();
 // initiatlizing the program counter of  operations. 
    int programcounter=0; 
    
    //Set of t registers
    String r="";
    //Set of toggle bit that are used for operations ranging from 0 to15 
    String x15= "0";
    String x14= "0";//
    String x13= "0";
    String x12= "0";
    String x11= "0";
    String x10= "0";
    String x9= "0";
    String x8= "0";
    String x7= "0";
    String x6= "0";
    String x5= "0";
    String x4= "0";
    String x3= "0";
    String x2= "0";
    String x1= "0";
    String x0= "0";
// we are adding and setting the othe rlements og 
    String ix="";
    String i="";
    String address="0000";
    String Halt="Start";
    
    
// Here we have initiated the general repository
    
    String gpr0="0";
    String gpr1="0";
    String gpr2="0";
    String gpr3="0";
    
    //We initalize the general registers; 
    String ixr1="0";
    String ixr2="0";
    String ixr3="0";
      String hexaValue;
      
      // The following is a basic implemenation of the Hashmap, the data structure we have used to serve as a memory for the project to store values in it, given the naturer of the key and fetching; 
      //Note that the size reuqired is outlined later on by setting the size of 2048
      
      public static final HashMap<String, String> Mapping = new HashMap<String, String>();//Mapping pushes lements in the dictionary 
	static {
            
		Mapping.put("000000", "HLT");
		Mapping.put("011110", "TRAP");
		Mapping.put("000001", "LDR");
		Mapping.put("000010", "STR");
		Mapping.put("000011", "LDA");
		Mapping.put("101001", "LDX");
		Mapping.put("101010", "STX");
		
                System.out.println(Mapping);
	}
// Code t genereate GUI
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GPR = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        GPR0 = new javax.swing.JTextField();
        GPR1 = new javax.swing.JTextField();
        GPR2 = new javax.swing.JTextField();
        GPR3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        IXR = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        IXR1 = new javax.swing.JTextField();
        IXR2 = new javax.swing.JTextField();
        IXR3 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        PC = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        MAR = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        MBR = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        IR = new javax.swing.JTextField();
        MFR = new javax.swing.JTextField();
        Priviledged = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        Address = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();
        jToggleButton11 = new javax.swing.JToggleButton();
        jToggleButton10 = new javax.swing.JToggleButton();
        jToggleButton12 = new javax.swing.JToggleButton();
        I = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jToggleButton17 = new javax.swing.JToggleButton();
        IXR_input = new javax.swing.JPanel();
        jToggleButton15 = new javax.swing.JToggleButton();
        jToggleButton14 = new javax.swing.JToggleButton();
        jLabel17 = new javax.swing.JLabel();
        GPR_input = new javax.swing.JPanel();
        jToggleButton16 = new javax.swing.JToggleButton();
        jToggleButton7 = new javax.swing.JToggleButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        GPR.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setText("GPR A");

        jLabel2.setText("GPR B");

        jLabel3.setText("GPR C");

        jLabel4.setText("GPR D");

        jButton1.setText("LD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("LD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("LD");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("LD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GPRLayout = new javax.swing.GroupLayout(GPR);
        GPR.setLayout(GPRLayout);
        GPRLayout.setHorizontalGroup(
            GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GPRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(GPRLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(GPR0, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GPRLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(GPR3))
                    .addGroup(GPRLayout.createSequentialGroup()
                        .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GPR1)
                            .addComponent(GPR2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton3)
                        .addComponent(jButton2)
                        .addComponent(jButton4))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        GPRLayout.setVerticalGroup(
            GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GPRLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(GPR0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(GPR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(GPR2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(GPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(GPR3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)))
        );

        IXR.setBackground(new java.awt.Color(204, 255, 255));

        jLabel5.setText("IXR A");

        jLabel6.setText("IXR B");

        jLabel7.setText("IXR C");

        jButton5.setText("LD");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("LD");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("LD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout IXRLayout = new javax.swing.GroupLayout(IXR);
        IXR.setLayout(IXRLayout);
        IXRLayout.setHorizontalGroup(
            IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IXRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27)
                .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IXR1)
                    .addComponent(IXR2)
                    .addComponent(IXR3, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        IXRLayout.setVerticalGroup(
            IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IXRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(IXR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(IXR2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addGroup(IXRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(IXR3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(15, 15, 15))
        );

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel8.setText("PC");

        jLabel9.setText("MAR");

        jLabel10.setText("MBR");

        jLabel11.setText("IR");

        jLabel12.setText("MFR");

        jLabel13.setText("Priviledged");

        jButton8.setText("LD");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("LD");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("LD");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PC)
                    .addComponent(MAR)
                    .addComponent(MBR)
                    .addComponent(IR)
                    .addComponent(MFR)
                    .addComponent(Priviledged, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton8)
                        .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(PC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(MAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MBR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(IR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(MFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Priviledged, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel15.setText("Address");

        jToggleButton8.setText("0");
        jToggleButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton8ActionPerformed(evt);
            }
        });

        jToggleButton9.setText("1");
        jToggleButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton9ActionPerformed(evt);
            }
        });

        jToggleButton11.setText("2");
        jToggleButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton11ActionPerformed(evt);
            }
        });

        jToggleButton10.setText("3");
        jToggleButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton10ActionPerformed(evt);
            }
        });

        jToggleButton12.setText("4");
        jToggleButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddressLayout = new javax.swing.GroupLayout(Address);
        Address.setLayout(AddressLayout);
        AddressLayout.setHorizontalGroup(
            AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddressLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddressLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddressLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        AddressLayout.setVerticalGroup(
            AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddressLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addContainerGap())
        );

        jLabel16.setText("I");

        jToggleButton17.setText("5");
        jToggleButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ILayout = new javax.swing.GroupLayout(I);
        I.setLayout(ILayout);
        ILayout.setHorizontalGroup(
            ILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ILayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jToggleButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ILayout.setVerticalGroup(
            ILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(12, 12, 12))
        );

        jToggleButton15.setText("7");
        jToggleButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton15ActionPerformed(evt);
            }
        });

        jToggleButton14.setText("6");
        jToggleButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton14ActionPerformed(evt);
            }
        });

        jLabel17.setText("IXR");

        javax.swing.GroupLayout IXR_inputLayout = new javax.swing.GroupLayout(IXR_input);
        IXR_input.setLayout(IXR_inputLayout);
        IXR_inputLayout.setHorizontalGroup(
            IXR_inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IXR_inputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(IXR_inputLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IXR_inputLayout.setVerticalGroup(
            IXR_inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IXR_inputLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(IXR_inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToggleButton16.setText("8");
        jToggleButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton16ActionPerformed(evt);
            }
        });

        jToggleButton7.setText("9");
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });

        jLabel18.setText("GPR");

        javax.swing.GroupLayout GPR_inputLayout = new javax.swing.GroupLayout(GPR_input);
        GPR_input.setLayout(GPR_inputLayout);
        GPR_inputLayout.setHorizontalGroup(
            GPR_inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GPR_inputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jToggleButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GPR_inputLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(31, 31, 31))
        );
        GPR_inputLayout.setVerticalGroup(
            GPR_inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GPR_inputLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(GPR_inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jToggleButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(24, 24, 24))
        );

        jToggleButton6.setText("10");
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });

        jToggleButton5.setText("11");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jToggleButton4.setText("12");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        jToggleButton3.setText("13");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("14");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("15");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Operation");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton6)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GPR_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IXR_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GPR_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(IXR_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));

        jButton11.setText("Save/Store");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("ST");

        jButton13.setText("Load");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Initialize");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Single Step ");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Run");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel19.setText("Halt");

        jLabel20.setText("Run");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton16))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton13)
                    .addComponent(jButton14)
                    .addComponent(jButton12))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton15)
                            .addComponent(jButton16))))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 204, 255));
        jTextField1.setText("TEAM A GUI");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(GPR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IXR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IXR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GPR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton8ActionPerformed
        boolean selected = jToggleButton8.getModel().isSelected();
       //This function sets the color and change the value of the x0 to 1, which means that the button is clicked on 
        if (selected){
            x0="1";
    jToggleButton8.setForeground(Color.GREEN);
           
       }
       else{
           x0="0";
           jToggleButton8.setForeground(Color.BLACK);
       }
       
    }//GEN-LAST:event_jToggleButton8ActionPerformed

    private void jToggleButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton9ActionPerformed

     // This function sets operations  switched it when it's clicked 
          boolean selected = jToggleButton9.getModel().isSelected();
       if (selected){
           x1="1";
            
    jToggleButton9.setForeground(Color.GREEN);     
       }
       else{
           x1="0";
           jToggleButton9.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton9ActionPerformed

    private void jToggleButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton11ActionPerformed
        // This function sets operations  switched it when it's clicked 
          boolean selected = jToggleButton11.getModel().isSelected();
       if (selected){
            x2="1";
        // this changes the color of the button 
    jToggleButton11.setForeground(Color.GREEN);
           
       }
       else{
           x2="0";
           jToggleButton11.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton11ActionPerformed

    //this function displays if the button is selected 
    private void jToggleButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton10ActionPerformed

        // // This function sets operations  switched it when it's clicked 
         boolean selected = jToggleButton10.getModel().isSelected();
       if (selected){
            x3="1";
    jToggleButton10.setForeground(Color.GREEN);
           
       }
       else{
           x3="0";
           jToggleButton10.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton10ActionPerformed

    private void jToggleButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton12ActionPerformed
         // This function sets operations  switched it when it's clicked 
         boolean selected = jToggleButton12.getModel().isSelected();
       if (selected){
            x4="1";
    jToggleButton12.setForeground(Color.GREEN);
           
       }
       else{
           x4="0";
           jToggleButton12.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton12ActionPerformed

    private void jToggleButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton17ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton17.getModel().isSelected();
       if (selected){
            x5="1";
    jToggleButton17.setForeground(Color.GREEN);
           
       }
       else{
           x5="0";
           jToggleButton17.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton17ActionPerformed

    private void jToggleButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton14ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton14.getModel().isSelected();
       if (selected){
           x6="1";
            
    jToggleButton14.setForeground(Color.GREEN);
           
       }
       else{
           x6="0";
           jToggleButton14.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton14ActionPerformed

    private void jToggleButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton15ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton15.getModel().isSelected();
       if (selected){
            x7="1";
    jToggleButton15.setForeground(Color.GREEN);
           
       }
       else{
           x7="0";
           jToggleButton15.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton15ActionPerformed

    private void jToggleButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton16ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton16.getModel().isSelected();
       if (selected){
            x8="1";
    jToggleButton16.setForeground(Color.GREEN);
           
       }
       else{
           x8="0";
           jToggleButton16.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton16ActionPerformed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton7.getModel().isSelected();
       if (selected){
            x9="1";
    jToggleButton7.setForeground(Color.GREEN);
           
       }
       else{
           x9="0";
           jToggleButton7.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton6.getModel().isSelected();
       if (selected){
            x10="1";
    jToggleButton6.setForeground(Color.GREEN);
           
       }
       else{
           x10="0";
           jToggleButton6.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton5.getModel().isSelected();
       if (selected){
            x11="1";
    jToggleButton5.setForeground(Color.GREEN);
           
       }
       else{
           x11="0";
           jToggleButton5.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton4.getModel().isSelected();
       if (selected){
            x12="1";
    jToggleButton4.setForeground(Color.GREEN);
           
       }
       else{
           x12="0";
           jToggleButton4.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton3.getModel().isSelected();
       if (selected){
            x13="1";
    jToggleButton3.setForeground(Color.GREEN);
           
       }
       else{
           x13="0";
           jToggleButton3.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton2.getModel().isSelected();
       if (selected){
            x14="1";
    jToggleButton2.setForeground(Color.GREEN);
           
       }
       else{
           x14="0";
           jToggleButton2.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        
        //This code changes the value of the selected element to 1
         boolean selected = jToggleButton1.getModel().isSelected();
       if (selected){
            x15="1";
    jToggleButton1.setForeground(Color.GREEN);
           
       }
       else{
           x15="0";
           jToggleButton1.setForeground(Color.BLACK);
       }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    public void sTringToHexa(){
       // This function converts a string to hexadeicmal format after first concatenating the elements fetched from the operations
       //he we combine all the strins values
        String finals=x15+x14+x13+x12+x11+x10+x9+x8+x7+x6+x5+x4+x3+x2+x1+x0;
        int binary= Integer.parseInt(finals,2);
        // After combining them, we need to convert the string into a binary string using the following method below
         hexaValue = Integer.toString(binary,16).toUpperCase();
         // 
        if (hexaValue.length() < 4)//add trailing zeroes
    hexaValue = "000".substring(hexaValue.length() - 1) + hexaValue;
        
    }
     
    String EffectiveAddress (String address, String bin){
    
    sTringToHexa();
         String add= address;
       
              i = bin.substring(10, 11);
               ix = bin.substring(8, 10);
               if ("0".equals(i)){
                   if ("00".equals(ix)){
                       return add;
                   }
                   else if ("01".equals(ix)){
                       int decimal1=Integer.parseInt(add,16); 
                       int decimal2=0;
                       if(IXR1.getText() == null || "".equals( IXR1.getText())){
                       decimal2=0;
                   }else{
                        decimal2=Integer.parseInt(IXR1.getText(),16); 
                       }
                       int sum = decimal1+decimal2;
                     
                       
                       return DecimaltoHexa(sum);
                   }
                   else if ("10".equals(ix)){
                       int decimal1=Integer.parseInt(add,16); 
                       int decimal2=0;
                       if(IXR2.getText() == null || "".equals( IXR2.getText())){
                       decimal2=0;
                   }else{
                        decimal2=Integer.parseInt(IXR2.getText(),16); 
                       }
                       int sum = decimal1+decimal2;
                     
                       
                       return DecimaltoHexa(sum);
                   }
                   else if ("11".equals(ix)){
                       int decimal1=Integer.parseInt(add,16); 
                       int decimal2=0;
                       if(IXR3.getText() == null || "".equals( IXR3.getText())){
                       decimal2=0;
                   }else{
                        decimal2=Integer.parseInt(IXR3.getText(),16); 
                       }
                       int sum = decimal1+decimal2;
                     
                       
                       return DecimaltoHexa(sum);
                   }
               }
               else {
                    if ("00".equals(ix)){
                        
                        return memorya.get(add);
                        
                    }
                   else if ("01".equals(ix)){
                       int decimal1=Integer.parseInt(memorya.get(add),16); 
                       int decimal2=0;
                       if(memorya.get(IXR1.getText()) == null || "".equals( memorya.get(IXR1.getText()))){
                       decimal2=0;
                   }else{
                        decimal2=Integer.parseInt(memorya.get(IXR1.getText()),16); 
                       }
                       int sum = decimal1+decimal2;
                     
                       
                       return DecimaltoHexa(sum);
                       
                       
                      
                   }
                   else if ("10".equals(ix)){
                        int decimal1=Integer.parseInt(memorya.get(add),16); 
                       int decimal2=0;
                       if(memorya.get(IXR2.getText()) == null || "".equals( memorya.get(IXR2.getText()))){
                       decimal2=0;
                   }else{
                        decimal2=Integer.parseInt(memorya.get(IXR2.getText()),16); 
                       }
                       int sum = decimal1+decimal2;
                     
                       
                       return DecimaltoHexa(sum);
                   }
                   else if ("11".equals(ix)){
                         int decimal1=Integer.parseInt(memorya.get(add),16); 
                       int decimal2=0;
                       if(memorya.get(IXR3.getText()) == null || "".equals( memorya.get(IXR3.getText()))){
                       decimal2=0;
                   }else{
                        decimal2=Integer.parseInt(memorya.get(IXR3.getText()),16); 
                       }
                       int sum = decimal1+decimal2;
                     
                       
                       return DecimaltoHexa(sum);
                   }
               
               }
              
              return address;
    }
     String DecimaltoHexa(int dec){
       
         hexaValue = Integer.toString(dec,16).toUpperCase();
        if (hexaValue.length() < 4)
    hexaValue = "000".substring(hexaValue.length() - 1) + hexaValue;
        return hexaValue;
        
    }
   String Hexa(String hexas){
   
        int binary= Integer.parseInt(hexas,2);
         hexaValue = Integer.toString(binary,16).toUpperCase();
        if (hexaValue.length() < 4)
    hexaValue = "000".substring(hexaValue.length() - 1) + hexaValue;
        return hexaValue;
        
    }
     String hexToBinary(String hex)
    {
        
        String binary = "";
 

        hexaValue = hexaValue.toUpperCase();
 
        // initializing the HashMap class
        HashMap<Character, String> hashMap
            = new HashMap<Character, String>();
 
        // storing the key value pairs
        hashMap.put('0', "0000");
        hashMap.put('1', "0001");
        hashMap.put('2', "0010");
        hashMap.put('3', "0011");
        hashMap.put('4', "0100");
        hashMap.put('5', "0101");
        hashMap.put('6', "0110");
        hashMap.put('7', "0111");
        hashMap.put('8', "1000");
        hashMap.put('9', "1001");
        hashMap.put('A', "1010");
        hashMap.put('B', "1011");
        hashMap.put('C', "1100");
        hashMap.put('D', "1101");
        hashMap.put('E', "1110");
        hashMap.put('F', "1111");
 
        int i;
        char ch;
 
      
        for (i = 0; i < hexaValue.length(); i++) {
            
            ch = hexaValue.charAt(i);
 
           
            if (hashMap.containsKey(ch))
 
                
                binary += hashMap.get(ch);
 
            
            else {
                binary = "Invalid Hexadecimal String";
                return binary;
            }
        }
 
        
        return binary;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
      
       sTringToHexa();
        
        GPR1.setText(hexaValue);
        gpr1=GPR1.getText();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
   
         sTringToHexa();
        GPR2.setText(hexaValue);
        gpr2=GPR2.getText();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        sTringToHexa();
        
        GPR0.setText(hexaValue);
        gpr0=GPR0.getText();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
   
        sTringToHexa();
        
        GPR3.setText(hexaValue);
        gpr3=GPR3.getText();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        
        sTringToHexa();
        
        IXR1.setText(hexaValue);
        ixr1=IXR1.getText();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        
        sTringToHexa();
        
        IXR2.setText(hexaValue);
        ixr2=IXR2.getText();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
       
        sTringToHexa();
        
        IXR3.setText(hexaValue);
        ixr3=IXR3.getText();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        
       
        sTringToHexa();
        
        PC.setText(hexaValue);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        //Setting value to MAR
         sTringToHexa();
        
        MAR.setText(hexaValue);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
        sTringToHexa();
      
        
        MBR.setText(hexaValue);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        
        //init button 
        
        //set all text fields,memory,registers and program counters to null/0
        programcounter=0;
     GPR0.setText("");
     GPR1.setText("");
     GPR2.setText("");
     GPR3.setText("");
     IXR1.setText("");
     IXR2.setText("");
     IXR3.setText("");
     MAR.setText("");
     MBR.setText("");
     IR.setText("");
        PC.setText("0000");

     Halt="Start";
      jLabel19.setForeground(Color.BLACK); 
     
        
        String[] tokens;
       
        try{
            
        File myObj = new File("IPL.txt"); 
      Scanner myReader = new Scanner(myObj);
        
      while (myReader.hasNextLine()) {
        String data = myReader.nextLine();
         tokens = data.split(" ");
         if(memorya.size() == 2048){          
             JOptionPane.showMessageDialog(null,"Word memory reached");
           
       }else{
         memorya.put(tokens[0],tokens[1]);   
         }
         
        
      }
   
       System.out.println(memorya);
      myReader.close();
    } catch (FileNotFoundException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();
    }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        

        // Get the address value from MAR
        String add= MAR.getText(); 

        // Retrieve the value stored at the address in memorya
        String res = memorya.get(add);  

        // Set the value of MBR to the retrieved value
        MBR.setText(res);

        // Print out the retrieved value
        System.out.println(res);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
    // Store the value of MBR in the memorya map with the key as the value of MAR
    memorya.put(MAR.getText(),MBR.getText());

    // Print out the entire memorya map
    System.out.println(memorya);

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
  // Call the method to convert string to hexadecimal
        sTringToHexa();
        
        // Loop through the memorya map to process each key-value pair
        for (String i : memorya.keySet()){ 
            
            // Convert the hexadecimal value of memorya to binary
            String bin =hexToBinary(memorya.get(i)); 
            
            // Increment the program counter
            programcounter++;
            
            // Print out the value of "i" and "value" in binary format, along with the program counter
            System.out.println("i" + hexToBinary(i)+" " +"value" + hexToBinary(memorya.get(i))+ programcounter); 
            System.out.println(bin);
            
            // Call the execute method with the current iteration's key and binary value
            execute(i,bin); 
            
            // Set the value of IR to the binary value
            IR.setText(bin); 
            
            // Set the value of PC to the key of the current iteration
            PC.setText(i); 
            
            // Put the key-binary value pair into the instruct map
            instruct.put(i,bin); 
         }
                  
         // Set the foreground color of jLabel19 to red
         jLabel19.setForeground(Color.red); 
          
    }//GEN-LAST:event_jButton16ActionPerformed
public void execute(String prc,String bin) {

    // Extracting the instruction code from the binary string
    String Mapper = bin.substring(0, 6); 
    // Extracting the register code from the binary string
    r = bin.substring(6, 8); 
    // Extracting the index code from the binary string
    ix = bin.substring(8, 10); 
    // Extracting the indirect bit from the binary string
    i = bin.substring(10, 11);
    // Extracting the address from the binary string
    address = bin.substring(11, 16);
    // Calculating the effective address
    String add=  EffectiveAddress(Hexa(address),bin); 

    // Retrieving the instruction from the instruction map
    String instr=Mapping.get(Mapper); 

    // Checking if the instruction is HLT
    if(instr == "HLT"){
        System.out.println("null"); // halt
        Halt="end";
    }
    else{
        // Switch statement for different instructions
        switch (instr){
            case "LDR":
                // Load register
                if ("00".equals(r)){
                    // Loading value from memory to GPR0
                    GPR0.setText(memorya.get(add));
                    // Setting values in the MAR and MBR
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                else if("01".equals(r)){
                    // Loading value from memory to GPR1
                    GPR1.setText(memorya.get(add));
                    // Setting values in the MAR and MBR
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                else if("10".equals(r)){
                    // Loading value from memory to GPR2
                    GPR2.setText(memorya.get(add));
                    // Setting values in the MAR and MBR
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                else if("11".equals(r)){
                    // Loading value from memory to GPR3
                    GPR3.setText(memorya.get(add));
                    // Setting values in the MAR and MBR
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                break;
                     
                     
                                     
// If the instruction is "LDA", the program checks the value of the register "r".
            case "LDA":
                // If the value of "r" is "00", the text of GPR0, MAR and MBR are set to the value of "add".
                if ("00".equals(r)) {
                    GPR0.setText(add);
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                // If the value of "r" is "01", the text of GPR1, MAR and MBR are set to the value of "add".
                else if("01".equals(r)) {
                    GPR1.setText(add);
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                // If the value of "r" is "10", the text of GPR2, MAR and MBR are set to the value of "add".
                else if("10".equals(r)) {
                    GPR2.setText(add);
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                // If the value of "r" is "11", the text of GPR3, MAR and MBR are set to the value of "add".
                else if("11".equals(r)) {
                    GPR3.setText(add);
                    MAR.setText(add);
                    MBR.setText(memorya.get(add));
                }
                // Exits the switch statement.
                break;

            // If the instruction is "HLT", the program outputs the message "HLT" and sets the value of Halt to "end".
            case "HLT":
                System.out.println("HLT");
                Halt = "end";
                break;
                      
                      
                  case "STR":
                     if ("00".equals(r)){
                     
                        String temp = GPR0.getText();
                        memorya.put(add,temp);
                        System.out.println(add+temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                     else if("01".equals(r)){
                        
                        String temp = GPR1.getText();
                        memorya.put(add,temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                      else if("10".equals(r)){
                       
                        String temp = GPR2.getText();
                        memorya.put(add,temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                      else if("11".equals(r)){
                    
                        String temp = GPR3.getText();
                        memorya.put(add,temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                     
                      break;
                  case "LDX":
                     if ("01".equals(ix)){
                         System.out.println("hello");
                        IXR1.setText(memorya.get(add));
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                     else if("10".equals(ix)){
                        System.out.println("hello");
                        IXR2.setText(memorya.get(add));
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                      else if("11".equals(ix)){
                       System.out.println("hello");
                        IXR3.setText(memorya.get(add));
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                      
                case "STX":
                     if("01".equals(ix)){
                        
                        String temp = IXR1.getText();
                        memorya.put(add,temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                      else if("10".equals(ix)){
                       
                        String temp = IXR2.getText();
                        memorya.put(add,temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                      else if("11".equals(ix)){
                    
                        String temp = IXR3.getText();
                        memorya.put(add,temp);
                        MAR.setText(add);
                        MBR.setText(memorya.get(add));
                     }
                     
                      break;
                 
                 default:
                     System.out.println("b");
                      break;
                     
    
    
        
    }
     }
 
 }

    
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        sTringToHexa();
        // Set the foreground color of the "jLabel19" component to black
        jLabel19.setForeground(Color.BLACK); 

        // Convert the value of the PC register from hexadecimal to decimal representation
        int prc=Integer.parseInt(PC.getText(),16); 

        // Convert the value at the current PC address in the memorya map from hexadecimal to binary representation
        String binary =hexToBinary(memorya.get(PC.getText()));

        // Print the binary representation to the console
        System.out.println(binary);

        // Execute the instruction at the current PC address
        execute(PC.getText(),binary);
        // Increment the PC register
        prc++;
        // Convert the incremented PC value back to hexadecimal representation
        PC.setText(DecimaltoHexa(prc));
        // Set the value of the IR register to the binary representation of the executed instruction
        IR.setText(binary);
        // Get the return value of the LastAdd method with the current PC address as input
        String end=LastAdd(PC.getText());
        // If the return value is "ends", set the foreground color of the "jLabel19" component to red
        if("ends".equals(end)){
            jLabel19.setForeground(Color.red);
            // Reset the PC register to "0000"
            PC.setText("0000");
            // Execute the instruction at the reset PC address
            execute(PC.getText(),memorya.get(PC.getText()));
        }
 
             
              
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed
    // This method takes a string argument "addr" and returns a string value
    String LastAdd(String addr){
        // Initialize a counter variable to count the number of occurrences of "addr" in the memorya map
        int count=0;
        // Iterating over the keys in the memorya map
        for (String i : memorya.keySet()){
            // If the current key is equal to the input "addr", increment the count
            if (i.equals(addr)){
                count++;
            }
        }
        // If the count is 0, return the string "ends"
        if(count==0){return "ends";}
        // Print the count to the console
        System.out.println("count"+count);
        // Return the string "hel"
        return "hel";
}

    
 // The main method is the starting point of the application
public static void main(String args[]) {
    // The invokeLater method is used to execute the runnable on the Event Dispatch Thread (EDT)
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            // Creating an instance of the Simulator class and setting its visibility to true
            new Simulator().setVisible(true);
        }
    });
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Address;
    private javax.swing.JPanel GPR;
    private javax.swing.JTextField GPR0;
    private javax.swing.JTextField GPR1;
    private javax.swing.JTextField GPR2;
    private javax.swing.JTextField GPR3;
    private javax.swing.JPanel GPR_input;
    private javax.swing.JPanel I;
    private javax.swing.JTextField IR;
    private javax.swing.JPanel IXR;
    private javax.swing.JTextField IXR1;
    private javax.swing.JTextField IXR2;
    private javax.swing.JTextField IXR3;
    private javax.swing.JPanel IXR_input;
    private javax.swing.JTextField MAR;
    private javax.swing.JTextField MBR;
    private javax.swing.JTextField MFR;
    private javax.swing.JTextField PC;
    private javax.swing.JTextField Priviledged;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton10;
    private javax.swing.JToggleButton jToggleButton11;
    private javax.swing.JToggleButton jToggleButton12;
    private javax.swing.JToggleButton jToggleButton14;
    private javax.swing.JToggleButton jToggleButton15;
    private javax.swing.JToggleButton jToggleButton16;
    private javax.swing.JToggleButton jToggleButton17;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    // End of variables declaration//GEN-END:variables
}
